[{"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/index.js":"1","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/App.js":"2","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/reportWebVitals.js":"3","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/store.js":"4","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/SideDrawer.js":"5","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Navbar.js":"6","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Backdrop.js":"7","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/HomeScreen.js":"8","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/ProductScreen.js":"9","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CartScreen.js":"10","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/cartActions.js":"11","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/userAction.js":"12","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/cartReducers.js":"13","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/productReducers.js":"14","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/userReducer.js":"15","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignUp/index.js":"16","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignIn/index.js":"17","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/productActions.js":"18","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Product.js":"19","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/CartItem.js":"20","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/localstorage.js":"21","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/Api.js":"22","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/utils.function.js":"23","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/Checkout.js":"24","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/orderActions.js":"25","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/storeReducer.js":"26","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/storeActions.js":"27","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/AdminSite.js":"28","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrders.js":"29","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Dasboard.js":"30","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Adminproducts.js":"31","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminCategories.js":"32","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/OrderScreen.js":"33","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/orderReducer.js":"34","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Orders/OrdersDetail.js":"35","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrdersDetail.js":"36","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/categoryReducer.js":"37","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/categoryAction.js":"38"},{"size":623,"mtime":1658127028391,"results":"39","hashOfConfig":"40"},{"size":2848,"mtime":1658600484750,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1658127028395,"results":"42","hashOfConfig":"40"},{"size":823,"mtime":1658631120496,"results":"43","hashOfConfig":"40"},{"size":2309,"mtime":1658559409376,"results":"44","hashOfConfig":"40"},{"size":3181,"mtime":1658632141668,"results":"45","hashOfConfig":"40"},{"size":162,"mtime":1658127028391,"results":"46","hashOfConfig":"40"},{"size":1179,"mtime":1658621888537,"results":"47","hashOfConfig":"40"},{"size":3017,"mtime":1658561381521,"results":"48","hashOfConfig":"40"},{"size":2358,"mtime":1658530452039,"results":"49","hashOfConfig":"40"},{"size":2130,"mtime":1658335387100,"results":"50","hashOfConfig":"40"},{"size":1261,"mtime":1658532885413,"results":"51","hashOfConfig":"40"},{"size":1057,"mtime":1658335357506,"results":"52","hashOfConfig":"40"},{"size":695,"mtime":1658214275826,"results":"53","hashOfConfig":"40"},{"size":954,"mtime":1658226063034,"results":"54","hashOfConfig":"40"},{"size":2661,"mtime":1658530740908,"results":"55","hashOfConfig":"40"},{"size":2405,"mtime":1658530703594,"results":"56","hashOfConfig":"40"},{"size":826,"mtime":1658637377910,"results":"57","hashOfConfig":"40"},{"size":592,"mtime":1658127028391,"results":"58","hashOfConfig":"40"},{"size":1021,"mtime":1658228092583,"results":"59","hashOfConfig":"40"},{"size":384,"mtime":1658225745081,"results":"60","hashOfConfig":"40"},{"size":6353,"mtime":1658637375681,"results":"61","hashOfConfig":"40"},{"size":313,"mtime":1658226907594,"results":"62","hashOfConfig":"40"},{"size":6894,"mtime":1658530196196,"results":"63","hashOfConfig":"40"},{"size":1574,"mtime":1658620019789,"results":"64","hashOfConfig":"40"},{"size":1154,"mtime":1658597033243,"results":"65","hashOfConfig":"40"},{"size":1162,"mtime":1658597464376,"results":"66","hashOfConfig":"40"},{"size":1759,"mtime":1658558241235,"results":"67","hashOfConfig":"40"},{"size":2098,"mtime":1658616020650,"results":"68","hashOfConfig":"40"},{"size":2703,"mtime":1658598630561,"results":"69","hashOfConfig":"40"},{"size":6143,"mtime":1658640658787,"results":"70","hashOfConfig":"40"},{"size":1270,"mtime":1658571509888,"results":"71","hashOfConfig":"40"},{"size":2001,"mtime":1658595580637,"results":"72","hashOfConfig":"40"},{"size":1801,"mtime":1658612243719,"results":"73","hashOfConfig":"40"},{"size":3337,"mtime":1658568107451,"results":"74","hashOfConfig":"40"},{"size":4032,"mtime":1658620458622,"results":"75","hashOfConfig":"40"},{"size":992,"mtime":1658631093744,"results":"76","hashOfConfig":"40"},{"size":578,"mtime":1658632033437,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"4blax4",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/index.js",[],["167","168"],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/App.js",["169","170"],"import './App.css'\nimport {useEffect, useState} from 'react'\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\n\n// Components\nimport Navbar from './components/Navbar'\nimport SideDrawer from './components/SideDrawer'\nimport Backdrop from './components/Backdrop'\n\n// Screens\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport SignUp from './screens/SignUp';\nimport SignIn from './screens/SignIn';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {fetchCart} from './redux/actions/cartActions';\nimport { getUserDetails } from './redux/actions/userAction';\nimport Checkout from './screens/Checkout';\nimport AdminSite from './screens/AdminSite';\nimport Dashboard from './components/adminSite/Dasboard'\nimport AdminOrders from './components/adminSite/AdminOrders'\nimport Adminproducts from './components/adminSite/Adminproducts'\nimport AdminCategories from './components/adminSite/AdminCategories'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderDetails from './components/Orders/OrdersDetail'\nimport AdminOrdersDetail from './components/adminSite/AdminOrdersDetail'\n\n\nfunction App() {\n  const [sideToggle, setSideToggle] = useState(false)\n  const user = useSelector(state => state.user)\n  const {loginSuccess, userDetails} = user\n  // fetchCart\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if(localStorage.getItem('token')) {\n    dispatch(fetchCart())\n    dispatch(getUserDetails());\n    }\n  }, [dispatch])\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n\n      <main className=\"app\">\n        <Routes>\n          <Route  path=\"/\" element={<HomeScreen/>} />\n          <Route  path=\"/product/:id\" element={<ProductScreen/>} />\n          <Route  path=\"/cart\" element={<CartScreen/>} />\n          <Route  path=\"/signup\" element={<SignUp/>} />\n          <Route  path=\"/signin\" element={<SignIn/>} />\n          <Route  path=\"/checkout\" element={<Checkout/>}/>\n          <Route  path=\"/orders\" element={<OrderScreen/>}/>\n          <Route  path=\"/order/:id\" element={<OrderDetails/>}/> \n          <Route  path=\"/admin\" element={<AdminSite/>}>\n          <Route index element={<Dashboard/>}/>\n          <Route path=\"/admin/dashboard\" element={<Dashboard/>}/>\n          <Route path=\"/admin/orders\" element={<AdminOrders/>}/>\n          <Route path=\"/admin/products\" element={<Adminproducts/>}/>\n          <Route path=\"/admin/category\" element={<AdminCategories/>}/>\n          <Route path=\"/admin/oders/:id\" element={<AdminOrdersDetail/>}/>\n          </Route>\n        </Routes>\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/reportWebVitals.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/store.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/SideDrawer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Navbar.js",["171"],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Backdrop.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/HomeScreen.js",["172","173","174"],"import './HomeScreen.css';\nimport {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\n// Components\nimport Product from '../components/Product';\n\n//Actions\nimport { fetchProducts } from '../redux/actions/productActions';\n\n\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const getProducts = useSelector(state => state.product)\n  const user = useSelector(state => state.user)\n  console.log(\"user\", user)\n  const {products, loading, error} = getProducts\n  \n\n\n\n\n\n  console.log(getProducts)\n  return (\n    <div className=\"homescreen\">\n      <h2 className=\"homescreen__title\">Latest Products</h2>\n      <div className=\"homescreen__products\">\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : error ? (\n          <h2>{error}</h2>\n        ) : (\n          products.map(product => (\n            <Product\n              key={product._id}\n              name={product.name}\n              description={product.description}\n              price={product.price}\n              imageUrl={product.imageUrl}\n              productId={product._id}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default HomeScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/ProductScreen.js",["175","176"],"import './ProductScreen.css';\nimport {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// Actions\nimport {addToCart, removeFromCart} from '../redux/actions/cartActions';\nimport {fetchProducts} from '../redux/actions/productActions';\n\n\nconst ProductScreen = () => {\n  const navigate = useNavigate(); \n  const {id} = useParams();\n  const [qty, setQty] = useState(1);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const productDetails = useSelector(state => state.product);\n  const {initialLoad, error, products, errorMsg} = productDetails;\n\n  useEffect(() => {\n    if(initialLoad){\n      dispatch(fetchProducts());\n    }\n  }, [dispatch], [initialLoad]);\n\n  useEffect(() => {\n    if (!initialLoad && id !== products._id) {\n      const product = products.find(p => p._id === id)\n      setProduct(product);\n      setLoading(false);\n    }\n  }, [id, products, initialLoad, dispatch]);\n\n  const addToCartHandler = () => {\n    if (user.loginSuccess) {\n      console.log(\"productscree\", product._id)\n      dispatch(addToCart(product._id, qty))\n      if(error){\n        alert(errorMsg);\n        return;\n      }\n      navigate(`/cart`)\n      return\n    } else {\n      alert('You need to first login.')\n    }\n  }\n\n  return (\n    <div className=\"productscreen\">\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n\n        <>\n          <div className=\"productscreen__left\">\n            <div className=\"left__image\">\n              <img src={product.imageUrl} alt={product.name} />\n            </div>\n            <div className=\"left__info\">\n              <p className=\"left__name\">{product.name}</p>\n              <p>Price: ${product.price}</p>\n              <p>Description: {product.description}</p>\n            </div>\n          </div>\n          <div className=\"productscreen__right\">\n            <div className=\"right__info\">\n              <p>\n                Price:\n                <span>${product.price}</span>\n              </p>\n              <p>\n                Status:\n                <span>\n                  {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                </span>\n              </p>\n              <p>\n                Qty\n                <select value={qty} onChange={e => setQty(e.target.value)}>\n                  {[...Array(product.countInStock).keys()].map(x => (\n                    <option key={x + 1} value={x + 1}>\n                      {x + 1}\n                    </option>\n                  ))}\n                </select>\n              </p>\n              <p>\n                <button type=\"button\" onClick={addToCartHandler}>\n                  Add To Cart\n                </button>\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default ProductScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CartScreen.js",["177","178"],"import './CartScreen.css'\nimport {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Link, useNavigate} from 'react-router-dom'\n\n// Components\nimport CartItem from '../components/CartItem'\n\n// Actions\nimport { modifyCart, removeFromCart} from '../redux/actions/cartActions'\n\n\nconst CartScreen = () => {\n  const dispatch = useDispatch()\n  const history = useNavigate()\n  const cart = useSelector(state => state.cart)\n  const user = useSelector(state => state.user)\n  const {loginSuccess} = user\n  const {cartLoaded, products} = cart\n\n  const qtyChangeHandler = (id, qty) => {\n    console.log(\"triger data\",id, qty)\n    dispatch(modifyCart(id, qty))\n  }\n\n  const removeFromCartHandler = item => {\n    console.log(\"remove data\", item)\n    dispatch(removeFromCart(item._id))\n  }\n\n  const getCartCount = () => {\n    return products.reduce((qty, item) => Number(item.qty) + qty, 0)\n  }\n\n  const getCartSubTotal = () => {\n    return products\n      .reduce((price, item) => price + item.price * item.qty, 0)\n      .toFixed(2)\n  }\n  const navigateToCheckout = () => {\n    products.length > 0 ? history('/checkout') : alert('Cart is empty')\n  }\n\n  console.log(\"cart\", cart)\n\n  if (!cartLoaded) return <h1>Loading.....</h1>\n  else if (cartLoaded)\n    return (\n      <>\n        <div className=\"cartscreen\">\n          <div className=\"cartscreen__left\">\n            <h2>Shopping Cart</h2>\n\n            {products.length === 0 ? (\n              <div>\n                Your Cart Is Empty <Link to=\"/\">Go Back</Link>\n              </div>\n            ) : (\n              products.map(item => (\n                <CartItem\n                  key={item.product}\n                  item={item}\n                  qtyChangeHandler={qtyChangeHandler}\n                  removeHandler={() => removeFromCartHandler(item)}\n                />\n              ))\n            )}\n          </div>\n\n          <div className=\"cartscreen__right\">\n            <div className=\"cartscreen__info\">\n              <p>Subtotal ({getCartCount()}) items</p>\n              <p>${getCartSubTotal()}</p>\n            </div>\n            <div>\n              <button\n              onClick={navigateToCheckout}\n              >\n                \n                Proceed To Checkout</button>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n}\n\nexport default CartScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/cartActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/userAction.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/cartReducers.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/productReducers.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/userReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignUp/index.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignIn/index.js",["179"],"import React, {useCallback, useState, useEffect} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\nimport './signIn.css';\nimport { fetchSignIn } from '../../redux/actions/userAction';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nfunction Index() {\n  const navigate = useNavigate()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const {loading, loginSuccess, error, errorMsg } = user;\n\n  const _handleSubmit = () => {\n    // callback\n    if (email.length > 2 && password.length > 2) {\n      dispatch(fetchSignIn({email, password}));\n    }\n  }\n\n  useEffect(() => {\n    if (loginSuccess) {\n      navigate('/')\n    }\n  }, [loginSuccess, navigate])\n\n  useEffect(() => {\n    if (error) {\n      alert(errorMsg)\n    }\n  }, [error, errorMsg])\n\n\n  console.log(\"user\",user);\n\n  if (loading) return <h1>Loading.....</h1>\n  return (\n    <div className=\"signinscreen\">\n      <div className=\"container\">\n        <div className=\"innerContainer\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '20px',\n              // backgroundColor: 'red',\n            }}\n          >\n            <div style={{cursor: 'pointer'}} onClick={() => navigate('/')}>\n              <i className=\"fas fa-arrow-circle-left fa-5x\"></i>\n            </div>\n            <p>Sign In</p>\n          </div>\n\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"lname\"\n            name=\"email\"\n            placeholder=\"Your email..\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"lname\"\n            name=\"password\"\n            placeholder=\"Your Password..\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n\n          <Link to=\"/signup\" className=\"link\">\n            <span>Creat a new account ?</span>\n          </Link>\n          <br />\n\n          <input type=\"submit\" value=\"Sign in\" onClick={()=>_handleSubmit()} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/productActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Product.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/CartItem.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/localstorage.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/Api.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/utils.function.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/Checkout.js",["180","181","182","183","184"],"import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { clearCart } from \"../redux/actions/cartActions\";\nimport { addOrder, createOrder } from \"../redux/actions/orderActions\";\n\nimport \"./Checkout.css\";\n\nconst Checkout = () => {\n  const userInfo = useSelector((State) => State.user.userDetails);\n\n  const { fullName, address, country, city, zipCode, state } = userInfo;\n\n  const [Address, setAddress] = useState({\n    fullName,\n    address,\n    country,\n    city,\n    zipCode,\n    state\n  });\n\n  const [token, setToken] = useState(1);\n  const history = useNavigate();\n  const dispatch = useDispatch();\n\n  const cart = useSelector((State) => State.cart);\n  const cartItems = useMemo(() => cart.products, [cart]);\n  const [checkoutFull, setCheckoutFull] = useState(false);\n\n\n  const handleOrden = () => {\n    if(checkoutFull){\n      const Order ={Address,cartItems, total: getCartSubTotal()}\n      dispatch(createOrder(Order));\n  }else{\n    alert(\"Please complete your Checkout\");\n  }\n}\n\n\n\n\n\n  useEffect(() => {\n    if(\n      Address.fullName === \"\" || \n      Address.address === \"\" || \n      Address.country === \"\" || \n      Address.city === \"\" || \n      Address.zipCode === \"\" || \n      Address.state === \"\" || \n      Address.fullName === undefined || \n      Address.address === undefined || \n      Address.country === undefined || \n      Address.city === undefined || \n      Address.zipCode === undefined || \n      Address.state === undefined){\n      setCheckoutFull(false);\n    }\n    else{\n      setCheckoutFull(true);\n    }\n  }, [fullName, address, country, city, zipCode, state, Address]);\n\n  const resetAddress = () => {\n    setAddress({\n      fullName: \"\",\n      address: \"\",\n      country: \"\",\n      city: \"\",\n      zipCode: \"\",\n      state: \"\"\n    });\n  }\n\n  const getCartSubTotal = () => {\n    return cartItems\n      .reduce((price, item) => price + item.price * item.qty, 0)\n      .toFixed(2);\n  };\n\n  console.log(\"cartItems\", cartItems);\n  return (\n    <div className=\"Checkout\">\n      <div className=\"container\">\n        <div className=\"Checkout__header\">\n          <h1 style={{ flexGrow: 1 }}>Shipping</h1>\n          <button \n          className='Checkout_testBtn'\n          onClick={resetAddress}\n          >clear checkout</button>\n        </div>\n\n        <p>Please enter your shipping details.</p>\n        <hr />\n        <div className=\"form\">\n          <div className=\"fields \">\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"lastname\">\n                FullName\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"lastname\"\n                value={Address.fullName}\n                onChange={(e) => {\n                  setAddress({ ...Address, fullName: e.target.value });\n                }}\n              />\n            </label>\n          </div>\n          <label className=\"field\">\n            <span className=\"field__label\" htmlFor=\"address\">\n              Address\n            </span>\n            <input\n              className=\"field__input\"\n              type=\"text\"\n              id=\"address\"\n              value={Address.address}\n              onChange={(e) =>\n                setAddress({ ...Address, address: e.target.value })\n              }\n            />\n          </label>\n          <label className=\"field\">\n            <span className=\"field__label\" htmlFor=\"country\">\n              Country\n            </span>\n            <input\n              className=\"field__input\"\n              id=\"country\"\n              value={Address.country}\n              onChange={(e) =>\n                setAddress({ ...Address, country: e.target.value })\n              }\n            ></input>\n          </label>\n          <div className=\"fields fields--3\">\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"zipcode\">\n                Zip code\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"zipcode\"\n                value={Address.zipCode}\n                onChange={(e) =>\n                  setAddress({ ...Address, zipCode: e.target.value })\n                }\n              />\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"city\">\n                City\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"city\"\n                value={Address.city}\n                onChange={(e) =>\n                  setAddress({ ...Address, city: e.target.value })\n                }\n              />\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"state\">\n                State\n              </span>\n              <input\n                className=\"field__input\"\n                id=\"state\"\n                value={Address.state}\n                onChange={(e) =>\n                  setAddress({ ...Address, state: e.target.value })\n                }\n              ></input>\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"phone\">\n                token to use\n              </span>\n              <select\n              onChange={(e) =>{\n                setToken(e.target.value)\n              }}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n            </label>\n\n          </div>\n          <br />\n          <h1 style={{ flexGrow: 1 }}>Cart</h1>\n          {cartItems.map((item, index) => (\n            <div className=\"fields fields--3\" key={index}>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"zipcode\">\n                  Producto\n                </span>\n                <div className=\"field__input\">{item.name}</div>\n              </label>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"city\">\n                  precio\n                </span>\n                <div className=\"field__input\">{item.price}</div>\n              </label>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"state\">\n                  qt\n                </span>\n                <div className=\"field__input\">{item.qty}</div>\n              </label>\n            </div>\n          ))}\n        </div>\n        <hr />\n        <div className=\"button-checkout\">\n    \n        < button\n        onClick={handleOrden}\n        className=\"button\"\n        >Pay order {getCartSubTotal()}\n        </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/orderActions.js",["185","186"],"import { Api } from \"../../utils/Api\";\n\nconst requestOrder = () => ({\n    type: \"REQUEST_ORDER\",\n});\n\nconst receiveOrder = payload => ({\n    type: \"RECEIVE_ORDER\",\n    payload: payload,\n});\n\nconst errorOrder = payload => ({\n    type: \"ERROR_ORDER\",\n    payload: payload,\n});\n\nconst updateOrder = payload => ({\n    type: \"UPDATE_ORDER\",\n    payload: payload,\n});\n\nconst deleteOrder = payload => ({\n    type: \"DELETE_ORDER\",\n    payload: payload,\n});\n\nconst savingOrder = () => ({\n    type: \"SAVING_ORDER\",\n});\n\nconst orderSaved = payload => ({\n    type: \"ORDER_SAVED\",\n    payload: payload,\n});\n\nexport const fetchOrder = () => async dispatch => {\n    dispatch(requestOrder());\n    try {\n        const data = await Api.getOrders();\n        console.log(\"data\", data);\n        dispatch(receiveOrder(data));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n    }\n}\n\nexport const createOrder = (order) => async dispatch => {\n    dispatch(requestOrder());\n    dispatch(savingOrder());\n    try {\n        const data = await Api.createOrder(order);\n        dispatch(receiveOrder(data));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n        dispatch(orderSaved(false));\n    }\n}\n\nexport const confirmOrCancelOrder = (orderId, finalStatus) => async dispatch => {\n    dispatch(requestOrder());\n    dispatch(savingOrder());\n    try {\n        const data = await Api.confirmOrCancel(orderId, finalStatus);\n        dispatch(receiveOrder(data.orders));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n        dispatch(orderSaved(false));\n    }\n}","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/storeReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/storeActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/AdminSite.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrders.js",["187","188"],"import \"./AdminOrders.css\";\nimport {useSelector} from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nconst AdminOrders = () => {\n  const navigate = useNavigate();\n  const Orders = useSelector(state => state.orders);\n  const { orderLoaded, orders } = Orders;\n\n  const handleDetails = (id) => {\n    navigate(`/admin/oders/${id}`);\n  }\n\n  console.log(\"orders\", Orders);\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  }\n\n  return (\n    <div className=\"admin-order-container\">\n      <div className=\"title-adminsite\">\n        <h2>Ordenes</h2>\n      </div>\n      <div className=\"admin-orders-options\">\n        {orderLoaded?\n        <>\n        <div>\n            <h3>Ordenes sin confirmar</h3>\n            {orders.filter(order => order.finalStatus === \"pending\").map((order, index) => (\n            <div className=\"admin-order-view\" key={index}>\n                <div><p>{index+1}</p></div>\n                <div><p>  {fiveDigit(order.orderNumber)} </p></div>\n                <div><p> ${order.total.toFixed(2)} </p></div>\n                <div className=\"unconfirmed-order\"><p> sin confirmar </p></div>\n                <div>\n                  <button \n                  onClick={() => handleDetails(order._id)}\n                >ver</button></div> \n            </div>\n            ))}\n        </div>\n        <div>\n            <h3>Ordenes confirmadas</h3>\n            {orders.filter(order => order.finalStatus !== \"pending\").map((order, index) => (\n            <div className=\"admin-order-view\" key={index}>\n                <div><p>{index+1}</p></div>\n                <div><p>{fiveDigit(order.orderNumber)}</p></div>\n                <div><p>${order.total.toFixed(2)}</p></div>\n                <div className=\"confirmed-order\"><p>confirmada</p></div>\n                <div><button\n                 onClick={() => handleDetails(order._id)}\n                >ver</button></div> \n            </div>\n            ))}\n        </div>\n        </>\n:<div> cargando...</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminOrders;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Dasboard.js",["189","190"],"import \"./dashboard.css\";\nimport {MdDeleteForever} from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { updateStores } from \"../../redux/actions/storeActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.store);\n\n  const { storeName, discount, StoreLoaded } = store;\n\n  const [storeNameInput, setStoreNameInput] = useState();\n  const [discountInput, setDiscountInput] = useState();\n\n  const handleUpdateStoreName = () => {\n    dispatch(updateStores({name:storeNameInput}));\n    setStoreNameInput();\n  }\n\n  const handleUpdateDiscount = () => {\n    dispatch(updateStores({discount:discountInput}));\n  }\n \n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"title-adminsite\">\n        <h2>Opciones</h2>\n      </div>\n      <div className=\"dasboard-option-container\">\n        <div className=\"dashboard-option\">\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Nombre: {storeName}</h3>\n            </div>\n            <label>\n              <p>cambiar nombre</p>\n              <input\n                type=\"text\" \n                value={storeNameInput}\n                onChange={(e) => setStoreNameInput(e.target.value)} \n              />\n              <button\n                onClick={handleUpdateStoreName}\n              >Guardar</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Descuento: {discount} %</h3>\n            </div>\n            <label>\n              <p>asignar descuento </p>\n              <input\n                type=\"number\" \n                value={discountInput}\n                onChange={(e) => setDiscountInput(e.target.value)}\n              />\n              <button\n                onClick={handleUpdateDiscount}\n              >Guardar</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Nuevo Administrador</h3>\n            </div>\n            <label>\n              <p>Nuevo Administrador</p>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n\n              />\n              <button>send email</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Administradores</h3>\n            </div>\n            <div className=\"dasboard-user-mail\">\n              <p>correo@correo.com</p>\n              <MdDeleteForever className=\"dasboard-icon\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Adminproducts.js",["191","192"],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminCategories.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/OrderScreen.js",["193","194","195","196","197"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrder } from \"../redux/actions/orderActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./OrderScreen.css\";\n\nconst OrderScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector((state) => state.user);\n  const Orders = useSelector((state) => state.orders);\n  const { orderLoaded, orders } = Orders;\n\n  const { loginSuccess, userDetails } = user;\n\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const orderDetail = (id) => {\n    navigate(`/order/${id}`);\n  }\n\n  const splitDate = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n  };\n\n  console.log(\"ordenes\", orders);\n  return (\n    <div className=\"orderscreen\">\n      <div className=\"Order-tittle\">\n        <h2>Mis Ordenes</h2>\n      </div>\n      <div>\n        {orderLoaded\n          ? orders.length > 0\n            ? orders.map((order, index) => (\n                <div className=\"order-card\" key={index}>\n                  <div>\n                    <h3>#{fiveDigit(order.orderNumber)}</h3>\n                  </div>\n                  <div>\n                    <h3>status: {order.finalStatus}</h3>\n                  </div>\n                  <div>\n                    <h3>{order.total.toFixed(2)}</h3>\n                  </div>\n                  <div>\n                    <h3>{splitDate(order.createdAt)}</h3>\n                  </div>\n                  <div>\n                    <button\n                     onClick={() => orderDetail(order._id)}\n                    >\n                      <h3>ver detalles</h3>\n                    </button>{\" \"}\n                  </div>\n                </div>\n              ))\n            : \"no tienes ordenes\"\n          : \"cargando ordenes\"}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/orderReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Orders/OrdersDetail.js",["198","199"],"import { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport \"./OrderDetail.css\";\n\nconst OrderDetails = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const Orders = useSelector((state) => state.orders);\n  const { orderLoaded, orders } = Orders;\n  const [selectedorder, setSelectedOrder] = useState({\n    orderNumber: \"\",\n    finalStatus: \"\",\n    total: \"\",\n    _id: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (orderLoaded && loading) {\n      const order = orders.find((p) => p._id === id);\n      setSelectedOrder(order);\n      setLoading(false);\n    }\n  }, [id, orders, orderLoaded, selectedorder]);\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const dateSplit = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n    }\n\n  return (\n    <div className=\"orders-detail\">\n      <div className=\"order-detail-tittle\">\n        {\" \"}\n        <h2>Order Details</h2>\n      </div>\n      <div>\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div className=\"order-detail-format\">\n\n            <div className=\"order-detail-top\">\n              <div>\n                <h2># {fiveDigit(selectedorder.orderNumber)}</h2>\n              </div>\n\n              <div>\n                <h3>status: {selectedorder.finalStatus}</h3>\n              </div>\n\n              <div>\n              <h3>{dateSplit(selectedorder.createdAt)}</h3>\n              </div>\n\n            </div>\n\n            <div className=\"order-detail-body\">\n                <div>\n                    <h3>${(selectedorder.total).toFixed(2)}</h3>\n                </div>\n\n                {selectedorder.payed?\n                <>                    \n                    <div>\n                        <h2>\n                            token: {selectedorder.token}\n                        </h2>\n                    </div>\n                    <div>\n                        <h2>\n                            {selectedorder.txHash}\n                        </h2>\n                    </div>\n                    </>\n                    :\n\n                    <div className=\"order-detail-select\">\n                        <select>\n                            <option value=\"\">token</option>\n                            <option value=\"token-1\">token1</option>\n                            <option value=\"token-2\">token2</option>\n                        </select>\n                        <button>Pagar Orden</button>\n                    </div> \n                }\n            </div>\n            <div >\n                <div>\n                    <h2>Productos:</h2>\n                    {selectedorder.products.map((item, index) => (\n                        <div className=\"order-detail-footer\" key={index}>\n                            <h3>{item.productId.name}</h3>\n                            <h3>Qty:{item.count}</h3>\n                            <h3>Price:{item.productId.price.toFixed(2)}</h3>\n                        </div>\n                        ))}\n                </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrdersDetail.js",["200"],"import { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport \"./AdminOrdersDetail.css\";\nimport { confirmOrCancelOrder } from \"../../redux/actions/orderActions\";\n\nconst AdminOrdersDetail = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const Orders = useSelector((state) => state.orders);\n\n\n  const [selectedorder, setSelectedOrder] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [lodedOrders, setLoadedOrders] = useState(false);\n  \n\n  useEffect(() => {\n    setLoadedOrders(Orders.orderLoaded);\n  }, [Orders.orderLoaded]);\n\n  useEffect(() => {\n    if (loading) {\n  \n        if(lodedOrders){\n      const order = Orders?.orders?.find((p) => p._id === id);\n      setSelectedOrder(order);\n      setLoadedOrders(false);\n      setLoading(false);\n        }\n \n    }\n  }, [lodedOrders, Orders.orders]);\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const dateSplit = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n  };\n\n  const confirmOrCancelOrders = (orderId, finalStatus)=>{\n    dispatch(confirmOrCancelOrder(orderId, finalStatus));\n    setLoadedOrders(false)\n    setLoading(true);\n    \n  }\n\n\n  return (\n    <div className=\"orders-detail\">\n      <div className=\"order-detail-tittle\">\n        {\" \"}\n        <h2>Order Details</h2>\n      </div>\n      <div>\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div className=\"order-detail-format\">\n            <div className=\"order-detail-top\">\n              <div>\n                <h2># {fiveDigit(selectedorder.orderNumber)}</h2>\n              </div>\n\n              <div>\n                <h3>status: {selectedorder.finalStatus}</h3>\n              </div>\n\n              <div>\n                <h3>{dateSplit(selectedorder.createdAt)}</h3>\n              </div>\n            </div>\n\n           \n            <div>\n              <div>\n                <h2>Productos:</h2>\n                {selectedorder.products.map((item, index) => (\n                  <div className=\"orders-detail-footer\" key={index}>\n                    <h3>{item.productId.name}</h3>\n                    <h3>Qty:{item.count}</h3>\n                    <h3>Price:{item.productId.price.toFixed(2)}</h3>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"order-detail-body\">\n              <div>\n                <h3>TOTAL: ${selectedorder.total.toFixed(2)}</h3>\n              </div>\n            </div>\n            <div className=\"order-detail-body\">\n              {selectedorder.payed ? (\n                <>\n                  <div>\n                    <h2>token: {selectedorder.token}</h2>\n                  </div>\n                  <div>\n                    <h2>{selectedorder.txHash}</h2>\n                  </div>\n                </>\n              ) : (\n                <div className=\"orders-detail-select\">\n                {selectedorder.finalStatus==='pending' ? \n                <>\n                <button \n                className=\"confirm-order\"\n                onClick={()=>confirmOrCancelOrders(selectedorder._id, 'confirmed')}\n                >\n                    Confirmar Orden</button>\n                 <button \n                 className=\"cancel-order\"\n                onClick={()=>confirmOrCancelOrders(selectedorder._id, 'cancelled')}\n                 > \n                 Cancelar Orden</button>\n                </>\n                :\n                selectedorder.finalStatus==='confirmed' ?\n                <div className=\"confirmed-order-details\">Orden Confirmada</div>:\n                <div className=\"cancelled-order-details\">Orden Cancelada</div>\n                }\n                  \n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminOrdersDetail;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/categoryReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/categoryAction.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":33,"column":10,"nodeType":"207","messageId":"208","endLine":33,"endColumn":22},{"ruleId":"205","severity":1,"message":"209","line":33,"column":24,"nodeType":"207","messageId":"208","endLine":33,"endColumn":35},{"ruleId":"205","severity":1,"message":"210","line":22,"column":21,"nodeType":"207","messageId":"208","endLine":22,"endColumn":29},{"ruleId":"205","severity":1,"message":"211","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"212","line":9,"column":10,"nodeType":"207","messageId":"208","endLine":9,"endColumn":23},{"ruleId":"205","severity":1,"message":"213","line":14,"column":9,"nodeType":"207","messageId":"208","endLine":14,"endColumn":17},{"ruleId":"205","severity":1,"message":"214","line":7,"column":20,"nodeType":"207","messageId":"208","endLine":7,"endColumn":34},{"ruleId":"215","severity":1,"message":"216","line":27,"column":6,"nodeType":"217","endLine":27,"endColumn":16,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"211","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":18,"column":10,"nodeType":"207","messageId":"208","endLine":18,"endColumn":22},{"ruleId":"205","severity":1,"message":"219","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":27},{"ruleId":"205","severity":1,"message":"219","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":21},{"ruleId":"205","severity":1,"message":"220","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":19},{"ruleId":"205","severity":1,"message":"221","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":23,"column":10,"nodeType":"207","messageId":"208","endLine":23,"endColumn":15},{"ruleId":"205","severity":1,"message":"223","line":24,"column":9,"nodeType":"207","messageId":"208","endLine":24,"endColumn":16},{"ruleId":"205","severity":1,"message":"224","line":17,"column":7,"nodeType":"207","messageId":"208","endLine":17,"endColumn":18},{"ruleId":"205","severity":1,"message":"225","line":22,"column":7,"nodeType":"207","messageId":"208","endLine":22,"endColumn":18},{"ruleId":"205","severity":1,"message":"226","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"211","line":3,"column":20,"nodeType":"207","messageId":"208","endLine":3,"endColumn":29},{"ruleId":"205","severity":1,"message":"211","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":19},{"ruleId":"205","severity":1,"message":"227","line":11,"column":32,"nodeType":"207","messageId":"208","endLine":11,"endColumn":43},{"ruleId":"205","severity":1,"message":"228","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"211","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":19},{"ruleId":"205","severity":1,"message":"211","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":19},{"ruleId":"205","severity":1,"message":"229","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":20},{"ruleId":"205","severity":1,"message":"213","line":8,"column":9,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":14,"column":11,"nodeType":"207","messageId":"208","endLine":14,"endColumn":23},{"ruleId":"205","severity":1,"message":"209","line":14,"column":25,"nodeType":"207","messageId":"208","endLine":14,"endColumn":36},{"ruleId":"205","severity":1,"message":"213","line":8,"column":9,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"230","line":25,"column":6,"nodeType":"217","endLine":25,"endColumn":46,"suggestions":"231"},{"ruleId":"215","severity":1,"message":"232","line":33,"column":6,"nodeType":"217","endLine":33,"endColumn":34,"suggestions":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'loginSuccess' is assigned a value but never used.","Identifier","unusedVar","'userDetails' is assigned a value but never used.","'discount' is assigned a value but never used.","'useEffect' is defined but never used.","'fetchProducts' is defined but never used.","'dispatch' is assigned a value but never used.","'removeFromCart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialLoad'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'useCallback' is defined but never used.","'clearCart' is defined but never used.","'addOrder' is defined but never used.","'token' is assigned a value but never used.","'history' is assigned a value but never used.","'updateOrder' is assigned a value but never used.","'deleteOrder' is assigned a value but never used.","'useState' is defined but never used.","'StoreLoaded' is assigned a value but never used.","'MdDeleteForever' is defined but never used.","'fetchOrder' is defined but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["237"],"React Hook useEffect has missing dependencies: 'id' and 'loading'. Either include them or remove the dependency array.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [dispatch, initialLoad]",{"range":"245","text":"246"},"Update the dependencies array to be: [id, orders, orderLoaded, selectedorder, loading]",{"range":"247","text":"248"},"Update the dependencies array to be: [lodedOrders, Orders?.orders, loading, id]",{"range":"249","text":"250"},[858,868],"[dispatch, initialLoad]",[721,761],"[id, orders, orderLoaded, selectedorder, loading]",[907,935],"[lodedOrders, Orders?.orders, loading, id]"]