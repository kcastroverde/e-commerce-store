[{"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/index.js":"1","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/App.js":"2","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/reportWebVitals.js":"3","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/store.js":"4","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/SideDrawer.js":"5","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Navbar.js":"6","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Backdrop.js":"7","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/HomeScreen.js":"8","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/ProductScreen.js":"9","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CartScreen.js":"10","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/cartActions.js":"11","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/userAction.js":"12","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/cartReducers.js":"13","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/productReducers.js":"14","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/userReducer.js":"15","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignUp/index.js":"16","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignIn/index.js":"17","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/productActions.js":"18","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Product.js":"19","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/CartItem.js":"20","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/localstorage.js":"21","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/Api.js":"22","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/utils.function.js":"23","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/Checkout.js":"24","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/orderActions.js":"25","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/storeReducer.js":"26","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/storeActions.js":"27","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/AdminSite.js":"28","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrders.js":"29","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Dasboard.js":"30","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Adminproducts.js":"31","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminCategories.js":"32","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/OrderScreen.js":"33","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/orderReducer.js":"34","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Orders/OrdersDetail.js":"35","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrdersDetail.js":"36","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/categoryReducer.js":"37","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/categoryAction.js":"38","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminEdithProducts.js":"39","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/DropdownCategory.js":"40","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CategoryScreen.js":"41","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/sideDrower/AcordionDrawer.js":"42","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/sideDrower/AcordionDrawerOrders.js":"43","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/adminOrdersReducer.js":"44","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/adminOrdersAction.js":"45"},{"size":623,"mtime":1658127028391,"results":"46","hashOfConfig":"47"},{"size":3171,"mtime":1658719698673,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1658127028395,"results":"49","hashOfConfig":"47"},{"size":921,"mtime":1658738637538,"results":"50","hashOfConfig":"47"},{"size":2025,"mtime":1658740291560,"results":"51","hashOfConfig":"47"},{"size":3289,"mtime":1658713437036,"results":"52","hashOfConfig":"47"},{"size":162,"mtime":1658127028391,"results":"53","hashOfConfig":"47"},{"size":1800,"mtime":1658724085251,"results":"54","hashOfConfig":"47"},{"size":2980,"mtime":1658706450440,"results":"55","hashOfConfig":"47"},{"size":2261,"mtime":1658703290585,"results":"56","hashOfConfig":"47"},{"size":2023,"mtime":1658740377621,"results":"57","hashOfConfig":"47"},{"size":1300,"mtime":1658715964732,"results":"58","hashOfConfig":"47"},{"size":1057,"mtime":1658335357506,"results":"59","hashOfConfig":"47"},{"size":695,"mtime":1658214275826,"results":"60","hashOfConfig":"47"},{"size":954,"mtime":1658226063034,"results":"61","hashOfConfig":"47"},{"size":2601,"mtime":1658716042595,"results":"62","hashOfConfig":"47"},{"size":2411,"mtime":1658714773838,"results":"63","hashOfConfig":"47"},{"size":1057,"mtime":1658703375500,"results":"64","hashOfConfig":"47"},{"size":592,"mtime":1658127028391,"results":"65","hashOfConfig":"47"},{"size":998,"mtime":1658703501149,"results":"66","hashOfConfig":"47"},{"size":384,"mtime":1658225745081,"results":"67","hashOfConfig":"47"},{"size":6507,"mtime":1658739006439,"results":"68","hashOfConfig":"47"},{"size":410,"mtime":1658647883555,"results":"69","hashOfConfig":"47"},{"size":6856,"mtime":1658703597006,"results":"70","hashOfConfig":"47"},{"size":1581,"mtime":1658703931017,"results":"71","hashOfConfig":"47"},{"size":1154,"mtime":1658597033243,"results":"72","hashOfConfig":"47"},{"size":1162,"mtime":1658597464376,"results":"73","hashOfConfig":"47"},{"size":2141,"mtime":1658739320176,"results":"74","hashOfConfig":"47"},{"size":2254,"mtime":1658740042825,"results":"75","hashOfConfig":"47"},{"size":2703,"mtime":1658598630561,"results":"76","hashOfConfig":"47"},{"size":6926,"mtime":1658708748540,"results":"77","hashOfConfig":"47"},{"size":2271,"mtime":1658692347375,"results":"78","hashOfConfig":"47"},{"size":1970,"mtime":1658703407254,"results":"79","hashOfConfig":"47"},{"size":1801,"mtime":1658699753765,"results":"80","hashOfConfig":"47"},{"size":3317,"mtime":1658648642004,"results":"81","hashOfConfig":"47"},{"size":4040,"mtime":1658740002377,"results":"82","hashOfConfig":"47"},{"size":992,"mtime":1658631093744,"results":"83","hashOfConfig":"47"},{"size":1049,"mtime":1658689721881,"results":"84","hashOfConfig":"47"},{"size":4513,"mtime":1658708320304,"results":"85","hashOfConfig":"47"},{"size":878,"mtime":1658721838245,"results":"86","hashOfConfig":"47"},{"size":2330,"mtime":1658724126448,"results":"87","hashOfConfig":"47"},{"size":957,"mtime":1658732576593,"results":"88","hashOfConfig":"47"},{"size":1093,"mtime":1658733199292,"results":"89","hashOfConfig":"47"},{"size":1855,"mtime":1658738423183,"results":"90","hashOfConfig":"47"},{"size":680,"mtime":1658738583880,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"4blax4",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/index.js",[],["204","205"],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/App.js",["206","207"],"import './App.css'\nimport {useEffect, useState} from 'react'\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\n\n// Components\nimport Navbar from './components/Navbar'\nimport SideDrawer from './components/SideDrawer'\nimport Backdrop from './components/Backdrop'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Screens\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport SignUp from './screens/SignUp';\nimport SignIn from './screens/SignIn';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {fetchCart} from './redux/actions/cartActions';\nimport { getUserDetails } from './redux/actions/userAction';\nimport Checkout from './screens/Checkout';\nimport AdminSite from './screens/AdminSite';\nimport Dashboard from './components/adminSite/Dasboard'\nimport AdminOrders from './components/adminSite/AdminOrders'\nimport Adminproducts from './components/adminSite/Adminproducts'\nimport AdminCategories from './components/adminSite/AdminCategories'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderDetails from './components/Orders/OrdersDetail'\nimport AdminOrdersDetail from './components/adminSite/AdminOrdersDetail'\nimport AdminEdithProducts from './components/adminSite/AdminEdithProducts'\nimport CategoryScreen from './screens/CategoryScreen'\n\n\nfunction App() {\n  const [sideToggle, setSideToggle] = useState(false)\n  const user = useSelector(state => state.user)\n  const {loginSuccess, userDetails} = user\n  // fetchCart\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if(localStorage.getItem('token')) {\n    dispatch(fetchCart())\n    dispatch(getUserDetails());\n    }\n  }, [dispatch])\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n\n      <main className=\"app\">\n        <Routes>\n          <Route  path=\"/\" element={<HomeScreen/>} />\n          <Route  path=\"/product/:id\" element={<ProductScreen/>} />\n          <Route  path=\"/cart\" element={<CartScreen/>} />\n          <Route  path=\"/signup\" element={<SignUp/>} />\n          <Route  path=\"/signin\" element={<SignIn/>} />\n          <Route  path=\"/checkout\" element={<Checkout/>}/>\n          <Route  path=\"/orders\" element={<OrderScreen/>}/>\n          <Route  path=\"/order/:id\" element={<OrderDetails/>}/> \n          <Route  path=\"/category/:id\" element={<CategoryScreen/>}/>\n\n          <Route  path=\"/admin\" element={<AdminSite/>}>\n          <Route index element={<Dashboard/>}/>\n          <Route path=\"/admin/dashboard\" element={<Dashboard/>}/>\n          <Route path=\"/admin/orders\" element={<AdminOrders/>}/>\n          <Route path=\"/admin/products\" element={<Adminproducts/>}/>\n          <Route path=\"/admin/category\" element={<AdminCategories/>}/>\n          <Route path=\"/admin/oders/:id\" element={<AdminOrdersDetail/>}/>\n          <Route path=\"/admin/products/:id\" element={<AdminEdithProducts/>}/>\n          </Route>\n        </Routes>\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/reportWebVitals.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/store.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/SideDrawer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Navbar.js",["208"],"import './Navbar.css';\nimport {Link, useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useEffect, useState} from 'react';\nimport { getUserDetails, logOut } from '../redux/actions/userAction';\nimport { getToken } from '../utils/localstorage';\nimport { fetchCart, logoutCart } from '../redux/actions/cartActions';\nimport { fetchStore } from '../redux/actions/storeActions';\nimport { fetchOrder } from '../redux/actions/orderActions';\nimport { fetchProducts } from '../redux/actions/productActions';\nimport { fetchCategory } from '../redux/actions/categoryAction';\nimport DropdownCategory from './DropdownCategory';\n\n\nconst Navbar = ({click}) => {\n  const cart = useSelector(state => state.cart)\n  const history = useNavigate()\n  const user = useSelector(state => state.user)\n  const store = useSelector(state => state.store)\n  const dispatch = useDispatch()\n  // console.log({user})\n  const {storeName, discount, StoreLoaded} = store\n  const {products, cartLoaded} = cart\n  const {loginSuccess, userDetails} = user\n\n\n  const getCartCount = () => {\n    return products.reduce((qty, item) => Number(item.qty) + qty, 0)\n  }\n\n  const [cartloadedsuccess, setCartloadedsuccess] = useState(false)\n\n  const _handleLogout = () => {\n    // console.log('click')\n    dispatch(logoutCart())\n    dispatch(logOut())\n    history('/')\n  }\n\n  useEffect(() => {\n    if(!StoreLoaded){\n    dispatch(fetchStore());\n    dispatch(fetchCategory());\n    dispatch(fetchProducts());\n    }\n  }, [dispatch, StoreLoaded])\n\n  useEffect(() => {\n    const token = getToken();\n    if(token)\n    dispatch(getUserDetails());\n  }, [dispatch])\n\n  useEffect(() => {\n    if(loginSuccess){\n      dispatch(fetchCart());\n      dispatch(fetchOrder());\n    }\n  }, [dispatch, loginSuccess])\n\n  useEffect(() => {\n    if(cartLoaded){\n      setCartloadedsuccess(true)\n    }\n  }, [cartLoaded])\n\n\n\n\n  \n  return (\n    <nav className=\"navbar-component\">\n      <div className=\"navbar__logo\">\n        <Link to=\"/\">\n        <h2>{StoreLoaded?\n          storeName: 'loading...' \n        }</h2>\n        </Link>\n      </div>\n \n    \n\n      <ul className=\"navbar__links\">\n        <DropdownCategory/>\n      {loginSuccess? userDetails.role === \"admin\" ?\n      <li>\n          <Link to=\"/admin\" className='admin__link'>\n          Admin \n          </Link>\n      </li>\n      : null : null}\n        <li>\n          <Link to=\"/orders\" className='orders__link'>\n            {loginSuccess? 'Orders' : null}\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/cart\" className=\"cart__link\">\n            <i className=\"fas fa-shopping-cart\"></i>\n            <span>\n              Cart <span className=\"cartlogo__badge\">{\n              cartloadedsuccess? getCartCount(): 0\n              }</span>\n            </span>\n          </Link>\n        </li>\n\n        <li>\n          <Link to=\"/\">Shop</Link>\n        </li>\n\n        {!user.loginSuccess ? (\n          <li>\n            <Link to=\"/signin\">Login</Link>\n          </li>\n        ) : (\n          <li>\n            <p onClick={_handleLogout}>Logout</p>\n          </li>\n        )}\n      </ul>\n\n      <div className=\"hamburger__menu\" onClick={click}>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Backdrop.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/HomeScreen.js",["209","210"],"import './HomeScreen.css';\nimport {useEffect, useState} from 'react';\nimport { useSelector} from 'react-redux';\n\n// Components\nimport Product from '../components/Product';\n\n\nconst HomeScreen = () => {\n\n\n  const getProducts = useSelector(state => state.product)\n  const user = useSelector(state => state.user)\n\n  const {products, loading, error, initialLoad} = getProducts\n\n  const [filterSearch, setFilterSearch] = useState('')\n  const [loadedProducts, setLoadedProducts] = useState(products)\n\n  const filter =()=>{\n    const filteredProducts = products.filter(product => {\n      return product.name.toLowerCase().includes(filterSearch.toLowerCase())\n    })\n    if(filterSearch === ''|| filterSearch === null|| filterSearch === undefined|| filterSearch === ' '){\n      setLoadedProducts(products)\n    }else{\n    setLoadedProducts(filteredProducts)\n    }\n  }\n\n  useEffect(()=>{\n    filter()\n  },[filterSearch, initialLoad])\n\n\n  return (\n    <div className=\"homescreen\">\n     \n\n      <div className='search-input-homescreen'>\n        <h3>Buscar producto:</h3>\n        <input \n        type=\"text\"\n        placeholder=\"nombre\"\n        value={filterSearch}\n        onChange={(e)=>{\n          setFilterSearch(e.target.value)}}\n        />\n      </div>\n      <div className=\"homescreen__products\">\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : error ? (\n          <h2>{error}</h2>\n        ) : (\n          loadedProducts.map((product, index) => (\n            <Product\n              key={index}\n              name={product.name}\n              description={product.description}\n              price={product.price}\n              imageUrl={product.imageUrl.url}\n              productId={product._id}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default HomeScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/ProductScreen.js",["211","212"],"import './ProductScreen.css';\nimport {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// Actions\nimport {addToCart, removeFromCart} from '../redux/actions/cartActions';\nimport {fetchProducts} from '../redux/actions/productActions';\n\n\nconst ProductScreen = () => {\n  const navigate = useNavigate(); \n  const {id} = useParams();\n  const [qty, setQty] = useState(1);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const productDetails = useSelector(state => state.product);\n  const {initialLoad, error, products, errorMsg} = productDetails;\n\n  useEffect(() => {\n    if(initialLoad){\n      dispatch(fetchProducts());\n    }\n  }, [dispatch], [initialLoad]);\n\n  useEffect(() => {\n    if (!initialLoad && id !== products._id) {\n      const product = products.find(p => p._id === id)\n      setProduct(product);\n      setLoading(false);\n    }\n  }, [id, products, initialLoad, dispatch]);\n\n  const addToCartHandler = () => {\n    if (user.loginSuccess) {\n     \n      dispatch(addToCart(product._id, qty))\n      if(error){\n        alert(errorMsg);\n        return;\n      }\n      navigate(`/cart`)\n      return\n    } else {\n      alert('You need to first login.')\n    }\n  }\n\n  return (\n    <div className=\"productscreen\">\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n\n        <>\n          <div className=\"productscreen__left\">\n            <div className=\"left__image\">\n              <img src={product.imageUrl.url} alt={product.name} />\n            </div>\n            <div className=\"left__info\">\n              <p className=\"left__name\">{product.name}</p>\n              <p>Price: ${product.price}</p>\n              <p>Description: {product.description}</p>\n            </div>\n          </div>\n          <div className=\"productscreen__right\">\n            <div className=\"right__info\">\n              <p>\n                Price:\n                <span>${product.price}</span>\n              </p>\n              <p>\n                Status:\n                <span>\n                  {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                </span>\n              </p>\n              <p>\n                Qty\n                <select value={qty} onChange={e => setQty(e.target.value)}>\n                  {[...Array(product.countInStock).keys()].map(x => (\n                    <option key={x + 1} value={x + 1}>\n                      {x + 1}\n                    </option>\n                  ))}\n                </select>\n              </p>\n              <p>\n                <button type=\"button\" onClick={addToCartHandler}>\n                  Add To Cart\n                </button>\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default ProductScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CartScreen.js",["213","214"],"import './CartScreen.css'\nimport {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Link, useNavigate} from 'react-router-dom'\n\n// Components\nimport CartItem from '../components/CartItem'\n\n// Actions\nimport { modifyCart, removeFromCart} from '../redux/actions/cartActions'\n\n\nconst CartScreen = () => {\n  const dispatch = useDispatch()\n  const history = useNavigate()\n  const cart = useSelector(state => state.cart)\n  const user = useSelector(state => state.user)\n  const {loginSuccess} = user\n  const {cartLoaded, products} = cart\n\n  const qtyChangeHandler = (id, qty) => {\n   \n    dispatch(modifyCart(id, qty))\n  }\n\n  const removeFromCartHandler = item => {\n\n    dispatch(removeFromCart(item._id))\n  }\n\n  const getCartCount = () => {\n    return products.reduce((qty, item) => Number(item.qty) + qty, 0)\n  }\n\n  const getCartSubTotal = () => {\n    return products\n      .reduce((price, item) => price + item.price * item.qty, 0)\n      .toFixed(2)\n  }\n  const navigateToCheckout = () => {\n    products.length > 0 ? history('/checkout') : alert('Cart is empty')\n  }\n\n \n\n  if (!cartLoaded) return <h1>Loading.....</h1>\n  else if (cartLoaded)\n    return (\n      <>\n        <div className=\"cartscreen\">\n          <div className=\"cartscreen__left\">\n            <h2>Shopping Cart</h2>\n\n            {products.length === 0 ? (\n              <div>\n                Your Cart Is Empty <Link to=\"/\">Go Back</Link>\n              </div>\n            ) : (\n              products.map(item => (\n                <CartItem\n                  key={item.product}\n                  item={item}\n                  qtyChangeHandler={qtyChangeHandler}\n                  removeHandler={() => removeFromCartHandler(item)}\n                />\n              ))\n            )}\n          </div>\n\n          <div className=\"cartscreen__right\">\n            <div className=\"cartscreen__info\">\n              <p>Subtotal ({getCartCount()}) items</p>\n              <p>${getCartSubTotal()}</p>\n            </div>\n            <div>\n              <button\n              onClick={navigateToCheckout}\n              >\n                \n                Proceed To Checkout</button>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n}\n\nexport default CartScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/cartActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/userAction.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/cartReducers.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/productReducers.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/userReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignUp/index.js",["215","216"],"import React, {useCallback, useState, useEffect} from 'react'\nimport {Link, useNavigate} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport './signup.css'\nimport { fetchSignUp } from '../../redux/actions/userAction';\n\nfunction Index() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [fullName, setFullName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const user = useSelector(state => state.user);\n  const {userDetails, loginSuccess, loading} = user;\n\n  const _handleSubmit =  () => {\n    if (fullName.length > 2 && email.length > 2 && password.length > 2) {\n      dispatch(fetchSignUp(fullName, email, password));\n      }\n    }\n\n  useEffect(() => {\n    if (loginSuccess) {\n      navigate('/')\n    }\n  }, [loginSuccess, navigate])\n\n\n  if (loading) return <h1>Loading...</h1>\n  return (\n    <div className=\"signupscreen\">\n      <div className=\"container\">\n        <div className=\"innerContainer\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '20px',\n              // backgroundColor: 'red',\n            }}\n          >\n            <div style={{cursor: 'pointer'}} onClick={() => navigate('/')}>\n              <i className=\"fas fa-arrow-circle-left fa-5x\"></i>\n            </div>\n            <p>Signup</p>\n          </div>\n\n          <label htmlFor=\"fname\">Full Name</label>\n          <input\n            type=\"text\"\n            id=\"fname\"\n            name=\"firstname\"\n            placeholder=\"Your full name..\"\n            value={fullName}\n            onChange={e => setFullName(e.target.value)}\n          />\n\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"lname\"\n            name=\"email\"\n            placeholder=\"Your email..\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"lname\"\n            name=\"password\"\n            placeholder=\"Your Password..\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n\n          <Link to=\"/signin\" className=\"link\">\n            <span>Already have an account ?</span>\n          </Link>\n          <br />\n\n          <input type=\"submit\" value=\"Sign up\" onClick={_handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/SignIn/index.js",["217"],"import React, {useCallback, useState, useEffect} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\nimport './signIn.css';\nimport { fetchSignIn } from '../../redux/actions/userAction';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nfunction Index() {\n  const navigate = useNavigate()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const {loading, loginSuccess, error, errorMsg } = user;\n\n  const _handleSubmit = () => {\n    // callback\n    if (email.length > 2 && password.length > 2) {\n      dispatch(fetchSignIn({email, password}));\n    }\n  }\n\n  useEffect(() => {\n    if (loginSuccess) {\n      navigate('/')\n    }\n  }, [loginSuccess, navigate])\n\n  useEffect(() => {\n    if (error) {\n      alert(errorMsg)\n    }\n  }, [error, errorMsg])\n\n\n  console.log(\"user\",user);\n\n  if (loading) return <h1>Loading.....</h1>\n  return (\n    <div className=\"signinscreen\">\n      <div className=\"container-login\">\n        <div className=\"innerContainer\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '20px',\n              // backgroundColor: 'red',\n            }}\n          >\n            <div style={{cursor: 'pointer'}} onClick={() => navigate('/')}>\n              <i className=\"fas fa-arrow-circle-left fa-5x\"></i>\n            </div>\n            <p>Sign In</p>\n          </div>\n\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"lname\"\n            name=\"email\"\n            placeholder=\"Your email..\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"lname\"\n            name=\"password\"\n            placeholder=\"Your Password..\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n\n          <Link to=\"/signup\" className=\"link\">\n            <span>Creat a new account ?</span>\n          </Link>\n          <br />\n\n          <input type=\"submit\" value=\"Sign in\" onClick={()=>_handleSubmit()} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/productActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Product.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/CartItem.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/localstorage.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/Api.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/utils/utils.function.js",["218"],"export const convertToCartData = (carts)=> {\n  const cartData = carts.filter(cart => cart.productId !== null|| cart.productId !== undefined);\n  return carts.map(c => {\n    return {\n      product: c.productId._id,\n      name: c.productId.name,\n      imageUrl: c.productId.imageUrl,\n      price: c.productId.price,\n      countInStock: c.productId.countInStock,\n      qty: c.count,\n      _id: c._id,\n    }\n  })\n}\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/Checkout.js",["219","220","221","222","223"],"import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { clearCart } from \"../redux/actions/cartActions\";\nimport { addOrder, createOrder } from \"../redux/actions/orderActions\";\n\nimport \"./Checkout.css\";\n\nconst Checkout = () => {\n  const userInfo = useSelector((State) => State.user.userDetails);\n\n  const { fullName, address, country, city, zipCode, state } = userInfo;\n\n  const [Address, setAddress] = useState({\n    fullName,\n    address,\n    country,\n    city,\n    zipCode,\n    state\n  });\n\n  const [token, setToken] = useState(1);\n  const history = useNavigate();\n  const dispatch = useDispatch();\n\n  const cart = useSelector((State) => State.cart);\n  const cartItems = useMemo(() => cart.products, [cart]);\n  const [checkoutFull, setCheckoutFull] = useState(false);\n\n\n  const handleOrden = () => {\n    if(checkoutFull){\n      const Order ={Address,cartItems, total: getCartSubTotal()}\n      dispatch(createOrder(Order));\n  }else{\n    alert(\"Please complete your Checkout\");\n  }\n}\n\n\n\n\n\n  useEffect(() => {\n    if(\n      Address.fullName === \"\" || \n      Address.address === \"\" || \n      Address.country === \"\" || \n      Address.city === \"\" || \n      Address.zipCode === \"\" || \n      Address.state === \"\" || \n      Address.fullName === undefined || \n      Address.address === undefined || \n      Address.country === undefined || \n      Address.city === undefined || \n      Address.zipCode === undefined || \n      Address.state === undefined){\n      setCheckoutFull(false);\n    }\n    else{\n      setCheckoutFull(true);\n    }\n  }, [fullName, address, country, city, zipCode, state, Address]);\n\n  const resetAddress = () => {\n    setAddress({\n      fullName: \"\",\n      address: \"\",\n      country: \"\",\n      city: \"\",\n      zipCode: \"\",\n      state: \"\"\n    });\n  }\n\n  const getCartSubTotal = () => {\n    return cartItems\n      .reduce((price, item) => price + item.price * item.qty, 0)\n      .toFixed(2);\n  };\n\n\n  return (\n    <div className=\"Checkout\">\n      <div className=\"container\">\n        <div className=\"Checkout__header\">\n          <h1 style={{ flexGrow: 1 }}>Shipping</h1>\n          <button \n          className='Checkout_testBtn'\n          onClick={resetAddress}\n          >clear checkout</button>\n        </div>\n\n        <p>Please enter your shipping details.</p>\n        <hr />\n        <div className=\"form\">\n          <div className=\"fields \">\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"lastname\">\n                FullName\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"lastname\"\n                value={Address.fullName}\n                onChange={(e) => {\n                  setAddress({ ...Address, fullName: e.target.value });\n                }}\n              />\n            </label>\n          </div>\n          <label className=\"field\">\n            <span className=\"field__label\" htmlFor=\"address\">\n              Address\n            </span>\n            <input\n              className=\"field__input\"\n              type=\"text\"\n              id=\"address\"\n              value={Address.address}\n              onChange={(e) =>\n                setAddress({ ...Address, address: e.target.value })\n              }\n            />\n          </label>\n          <label className=\"field\">\n            <span className=\"field__label\" htmlFor=\"country\">\n              Country\n            </span>\n            <input\n              className=\"field__input\"\n              id=\"country\"\n              value={Address.country}\n              onChange={(e) =>\n                setAddress({ ...Address, country: e.target.value })\n              }\n            ></input>\n          </label>\n          <div className=\"fields fields--3\">\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"zipcode\">\n                Zip code\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"zipcode\"\n                value={Address.zipCode}\n                onChange={(e) =>\n                  setAddress({ ...Address, zipCode: e.target.value })\n                }\n              />\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"city\">\n                City\n              </span>\n              <input\n                className=\"field__input\"\n                type=\"text\"\n                id=\"city\"\n                value={Address.city}\n                onChange={(e) =>\n                  setAddress({ ...Address, city: e.target.value })\n                }\n              />\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"state\">\n                State\n              </span>\n              <input\n                className=\"field__input\"\n                id=\"state\"\n                value={Address.state}\n                onChange={(e) =>\n                  setAddress({ ...Address, state: e.target.value })\n                }\n              ></input>\n            </label>\n            <label className=\"field\">\n              <span className=\"field__label\" htmlFor=\"phone\">\n                token to use\n              </span>\n              <select\n              onChange={(e) =>{\n                setToken(e.target.value)\n              }}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n            </label>\n\n          </div>\n          <br />\n          <h1 style={{ flexGrow: 1 }}>Cart</h1>\n          {cartItems.map((item, index) => (\n            <div className=\"fields fields--3\" key={index}>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"zipcode\">\n                  Producto\n                </span>\n                <div className=\"field__input\">{item.name}</div>\n              </label>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"city\">\n                  precio\n                </span>\n                <div className=\"field__input\">{item.price}</div>\n              </label>\n              <label className=\"field\">\n                <span className=\"field__label\" htmlFor=\"state\">\n                  qt\n                </span>\n                <div className=\"field__input\">{item.qty}</div>\n              </label>\n            </div>\n          ))}\n        </div>\n        <hr />\n        <div className=\"button-checkout\">\n    \n        < button\n        onClick={handleOrden}\n        className=\"button\"\n        >Pay order {getCartSubTotal()}\n        </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/orderActions.js",["224","225"],"import { Api } from \"../../utils/Api\";\n\nconst requestOrder = () => ({\n    type: \"REQUEST_ORDER\",\n});\n\nconst receiveOrder = payload => ({\n    type: \"RECEIVE_ORDER\",\n    payload: payload,\n});\n\nconst errorOrder = payload => ({\n    type: \"ERROR_ORDER\",\n    payload: payload,\n});\n\nconst updateOrder = payload => ({\n    type: \"UPDATE_ORDER\",\n    payload: payload,\n});\n\nconst deleteOrder = payload => ({\n    type: \"DELETE_ORDER\",\n    payload: payload,\n});\n\nconst savingOrder = () => ({\n    type: \"SAVING_ORDER\",\n});\n\nconst orderSaved = payload => ({\n    type: \"ORDER_SAVED\",\n    payload: payload,\n});\n\nexport const fetchOrder = () => async dispatch => {\n    dispatch(requestOrder());\n    try {\n        const data = await Api.getOrders();\n     \n        dispatch(receiveOrder(data));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n    }\n}\n\nexport const createOrder = (order) => async dispatch => {\n    dispatch(requestOrder());\n    dispatch(savingOrder());\n    try {\n        const data = await Api.createOrder(order);\n      \n        dispatch(receiveOrder(\n            data.orders\n        ));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n        dispatch(orderSaved(false));\n    }\n}\n\nexport const confirmOrCancelOrder = (orderId, finalStatus) => async dispatch => {\n    dispatch(requestOrder());\n    dispatch(savingOrder());\n    try {\n        const data = await Api.confirmOrCancel(orderId, finalStatus);\n        dispatch(receiveOrder(data.orders));\n    }\n    catch (error) {\n        dispatch(errorOrder(error));\n        dispatch(orderSaved(false));\n    }\n}","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/storeReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/storeActions.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/AdminSite.js",["226"],"import \"./AdminSite.css\";\nimport {useState, useEffect} from \"react\";\nimport {NavLink, Outlet} from \"react-router-dom\";\nimport {IoMdOptions} from \"react-icons/io\";\nimport {GoListUnordered} from \"react-icons/go\";\nimport {AiOutlineShoppingCart} from \"react-icons/ai\";\nimport {BiCategoryAlt} from \"react-icons/bi\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport { fetchAdminOrders } from \"../redux/actions/adminOrdersAction\";\n\nconst AdminSite = () => {\n  const dispatch = useDispatch();\n  const adminOrders = useSelector(state => state.adminOrders);\n  const {orders, orderLoaded} = adminOrders;\n  const [sideBarOpen, setSideBarOpen] = useState(true);\n  const [Width, setWidth] = useState(false);\n\n  useEffect(() => {\n    if(!orderLoaded) {\n    dispatch(fetchAdminOrders());\n    }\n  }, [dispatch, orderLoaded]);\n\n  useEffect(() => {\n    if(Width === false) {\n      setWidth(window.innerWidth);\n    }\n  }, [Width]);\n\n  useEffect(() => {\n    const updateWindowDimensions = () => {\n      const newWidth = window.innerWidth\n      setWidth(newWidth);\n    };\n    window.addEventListener(\"resize\", updateWindowDimensions);\n\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions) \n    }, []);\n\n    useEffect(() => {\n      if (Width < 960) {\n        setSideBarOpen(false);\n      }else{\n        setSideBarOpen(true);\n      }\n    }, [Width]);\n\n\n  return (\n    <div className=\"adminsite\">\n      <div className={`${sideBarOpen? \"sideBar\":\"not-display\"}`}>\n        <ul>\n        <NavLink to=\"/admin/dashboard\">\n          <li><IoMdOptions className=\"admin-icon\"/>Opciones</li>\n        </NavLink>\n        <NavLink to=\"/admin/orders\">\n          <li><GoListUnordered className=\"admin-icon\"/> Ordenes</li>\n        </NavLink>\n        <NavLink to=\"/admin/products\">\n          <li><AiOutlineShoppingCart className=\"admin-icon\"/> Productos</li>\n        </NavLink>\n        <NavLink to=\"/admin/category\">\n          <li><BiCategoryAlt className=\"admin-icon\"/> Categorias</li>\n        </NavLink>\n        </ul>\n      </div>\n      <div className=\"admin-screen\">\n        <Outlet/>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminSite;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrders.js",["227","228"],"import \"./AdminOrders.css\";\nimport {useSelector} from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nconst AdminOrders = () => {\n  const navigate = useNavigate();\n  const adminOrders = useSelector(state => state.adminOrders);\n  const { orderLoaded, orders } = adminOrders;\n \n  const handleDetails = (id) => {\n    navigate(`/admin/oders/${id}`);\n  }\n\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  }\n\n  return (\n    <div className=\"admin-order-container\">\n      <div className=\"title-adminsite\">\n        <h2>Ordenes</h2>\n      </div>\n      <div className=\"admin-orders-options\">\n        {orderLoaded?\n        <>\n        <div>\n            <h3>Ordenes sin confirmar</h3>\n            {orders.filter(order => order.finalStatus === \"pending\").map((order, index) => (\n            <div className=\"admin-order-view\" key={index}>\n                <div><p>{index+1}</p></div>\n                <div><p>  {fiveDigit(order.orderNumber)} </p></div>\n                <div><p> ${order.total.toFixed(2)} </p></div>\n                <div className=\"unconfirmed-order\"><p> sin confirmar </p></div>\n                <div>\n                  <button \n                  onClick={() => handleDetails(order._id)}\n                >ver</button></div> \n            </div>\n            ))}\n        </div>\n        <div>\n            <h3>Ordenes confirmadas</h3>\n            {orders.filter(order => order.finalStatus !== \"pending\").map((order, index) => (\n            <div className=\"admin-order-view\" key={index}>\n                <div><p>{index+1}</p></div>\n                <div><p>{fiveDigit(order.orderNumber)}</p></div>\n                <div><p>${order.total.toFixed(2)}</p></div>\n                <div className={order.finalStatus === 'confirmed'?\n                \"confirmed-order\": \"cancelled-order\"\n                }><p>{order.finalStatus === 'confirmed'?\n                \"confirmada\": \"cancelada\"\n              }</p></div>\n                <div><button\n                 onClick={() => handleDetails(order._id)}\n                >ver</button></div> \n            </div>\n            ))}\n        </div>\n\n        </>\n:<div> cargando...</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminOrders;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Dasboard.js",["229","230"],"import \"./dashboard.css\";\nimport {MdDeleteForever} from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { updateStores } from \"../../redux/actions/storeActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.store);\n\n  const { storeName, discount, StoreLoaded } = store;\n\n  const [storeNameInput, setStoreNameInput] = useState();\n  const [discountInput, setDiscountInput] = useState();\n\n  const handleUpdateStoreName = () => {\n    dispatch(updateStores({name:storeNameInput}));\n    setStoreNameInput();\n  }\n\n  const handleUpdateDiscount = () => {\n    dispatch(updateStores({discount:discountInput}));\n  }\n \n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"title-adminsite\">\n        <h2>Opciones</h2>\n      </div>\n      <div className=\"dasboard-option-container\">\n        <div className=\"dashboard-option\">\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Nombre: {storeName}</h3>\n            </div>\n            <label>\n              <p>cambiar nombre</p>\n              <input\n                type=\"text\" \n                value={storeNameInput}\n                onChange={(e) => setStoreNameInput(e.target.value)} \n              />\n              <button\n                onClick={handleUpdateStoreName}\n              >Guardar</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Descuento: {discount} %</h3>\n            </div>\n            <label>\n              <p>asignar descuento </p>\n              <input\n                type=\"number\" \n                value={discountInput}\n                onChange={(e) => setDiscountInput(e.target.value)}\n              />\n              <button\n                onClick={handleUpdateDiscount}\n              >Guardar</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Nuevo Administrador</h3>\n            </div>\n            <label>\n              <p>Nuevo Administrador</p>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n\n              />\n              <button>send email</button>\n            </label>\n          </div>\n          <div className=\"dashboard-table\">\n            <div>\n            <h3>Administradores</h3>\n            </div>\n            <div className=\"dasboard-user-mail\">\n              <p>correo@correo.com</p>\n              <MdDeleteForever className=\"dasboard-icon\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/Adminproducts.js",["231","232"],"import \"./Adminproducts.css\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchNewProduct } from \"../../redux/actions/productActions\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Adminproducts = () => {\n  const navigate = useNavigate();\n  const product = useSelector((state) => state.product);\n  const category = useSelector((state) => state.category);\n  const { products, initialLoad } = product;\n  const {categories, categoriesLoaded} = category;\n\n  \n\n  const dispatch = useDispatch();\n\n  const [newProduct, setNewProduct] = useState({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    countInStock: \"\",\n    imageToCharge: \"\",\n    category: \"\",\n  });\n\n  const convertImageToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n\n  const handleSubmit =(e) =>{\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", newProduct.name);\n    formData.append(\"price\", newProduct.price);\n    formData.append(\"description\", newProduct.description);\n    formData.append(\"countInStock\", newProduct.countInStock);\n    formData.append(\"imageUrl\", newProduct.imageToCharge);\n    formData.append(\"category\", newProduct.category);\n    //if value \"\" alert \n    if(newProduct.name === \"\" || newProduct.price === \"\" || newProduct.description === \"\" || newProduct.countInStock === \"\" || newProduct.imageToCharge === \"\" || newProduct.category === \"\"){\n      alert(\"Please fill all the fields\");\n      return;\n    }\n\n    dispatch(fetchNewProduct(newProduct));\n    setNewProduct({\n      name: \"\",\n      price: \"\",\n      description: \"\",\n      countInStock: \"\",\n      imageToCharge: \"\",\n      category: \"\",\n    });\n  }\n\n  const navigateToDetails = (id) => {\n    navigate(`/admin/products/${id}`);\n  }\n\n\n  return (\n    <div className=\"admin-product-container\">\n      <div className=\"title-adminsite\">\n        <h2>Productos</h2>\n      </div>\n      <div className=\"admin-products-option\">\n        <div className=\"admin-products-new\">\n          <h3>Nuevo Producto</h3>\n          <div className=\"admin-products-detail\">\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"top-products-detail\">\n              <div className=\"inputs-flex-colum\">\n                <p>Nombre: </p>\n                <input\n                  type=\"text\"\n                  value={newProduct.name}\n                  onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })} \n                />\n              </div>\n              <div className=\"inputs-flex-colum\">\n                <p>Precio: </p>\n                <input\n                  type=\"number\"\n                  value={newProduct.price}\n                  onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })} \n                />\n              </div>\n              <div className=\"inputs-flex-colum\">\n                <p>stock: </p>\n                <input\n                  type=\"number\"\n                  value={newProduct.countInStock}\n                  onChange={(e) => setNewProduct({ ...newProduct, countInStock: e.target.value })}\n                />\n              </div >\n              <div className=\"category-admin-product\">\n                <p>Categoria: </p>\n                <select\n                  value={newProduct.category}\n                  onChange={(e) => setNewProduct({ ...newProduct, category: e.target.value })}\n\n                >\n                  <option value=\"\">seleccione...</option>\n                  {categoriesLoaded &&\n                    categories.map((category, index) => (\n                      <option key={index} value={category._id}>\n                        {category.name}\n                      </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"body-products-detail\">\n              <p>Descripcion: </p>\n              <textarea\n                value={newProduct.description}\n                onChange={(e) => setNewProduct({ ...newProduct, description: e.target.value })} \n              />\n              <div className=\"image-select-product\">\n                  <p>Imagen:</p>\n                  {newProduct.imageToCharge === \"\" ? null: <img src={newProduct.imageToCharge} alt=\"\"/>}\n                  <input \n                  type=\"file\"\n                  onChange={(e) => {\n                    convertImageToBase64(e.target.files[0]).then((image)=>{\n                      setNewProduct({ ...newProduct, imageToCharge: image });\n                    })}}\n                  />\n              </div>\n            </div>\n\n            <div>\n              <input \n              type=\"submit\"\n              className=\"button-admin-product-save\"\n              value=\"Guardar\"\n              />\n          \n            </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"admin-products-exist\">\n          <h3>Productos existentes</h3>\n          {initialLoad === false ? (\n            <>\n              {products.map((item, index) => (\n                <div className=\"admin-products-detail-old\" key={index}>\n                  <div className=\"top-products-detail\">\n                    <div className=\"old-detail-name\">\n                      <p>Nombre: </p>\n                      {item.name}\n                    </div>\n                    <div>\n                      <p>Precio: </p>\n                      {item.price}\n                    </div>\n                    <div className=\"category-admin-products\">\n                      <p>Categoria: </p>\n                      {item.categorieId.name}\n                    </div>\n                    <div>\n                      <p>stock: </p>\n                      {item.countInStock}\n                    </div>\n                    <div className=\"image-admin-products\">\n                     <img src={item.imageUrl.url} alt=\"\"/>\n                    </div>\n                    <div>\n                    <button\n                    onClick={() => navigateToDetails(item._id)}\n                    >editar</button>\n                  </div>\n                  </div>\n                  {/* <div className=\"body-products-detail\">\n                    <p>Descripcion: </p>\n                    {item.description}\n                  </div> */}\n                  {/* <div className=\"products-detail-image\">\n                      <img src={item.imageUrl} alt=\"product\" />\n                    </div> */}\n    \n              \n                </div>\n              ))}\n            </>\n          ) : (\n            <div className=\"admin-products-detail\">Cargando...</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Adminproducts;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminCategories.js",["233"],"import \"./AdminCategories.css\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport {\n  deleteCategory,\n  newCategory,\n} from \"../../redux/actions/categoryAction\";\n\nconst AdminCategories = () => {\n  const category = useSelector((state) => state.category);\n  const { categories, categoriesLoaded } = category;\n  const dispatch = useDispatch();\n  const [categoryName, setCategoryName] = useState(\"\");\n\n  const handleNewCategory = () => {\n    if (categoryName !== \"\") {\n      dispatch(newCategory(categoryName));\n      setCategoryName(\"\");\n    } else {\n      alert(\"Ingrese un nombre para la categoria\");\n    }\n  };\n\n  const handleDeleteCategory = (id) => {\n    dispatch(deleteCategory(id));\n  };\n\n\n\n  return (\n    <div className=\"admin-categories\">\n      <div className=\"title-adminsite\">\n        <h2>Categorias</h2>\n      </div>\n      <div className=\"admin-categories-options\">\n        <div className=\"admin-categories-option-title\">\n          <h3>Nueva Categoria</h3>\n          <div className=\"admin-categories-inside\">\n            <p>Nombre: </p>\n            <input\n              type=\"text\"\n              value={categoryName}\n              onChange={(e) => setCategoryName(e.target.value)}\n            />\n            <button onClick={handleNewCategory}>Crear</button>\n          </div>\n        </div>\n        <div className=\"admin-categories-exist\">\n          <h3>categorias</h3>\n          {categoriesLoaded ? (\n            <>\n              {categories.map((category, index) => (\n                <div className=\"admin-categorie-map\" key={index}>\n                  <div className=\"admin-categories-bubble\">\n                    <p>{index}</p>\n                    <p>nombre: {category.name}</p>\n                    <div onClick={() => handleDeleteCategory(category._id)}>\n                      <MdDeleteForever className=\"dasboard-icon\" />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className=\"admin-categories-loading\">\n              <h2>Cargando...</h2>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCategories;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/OrderScreen.js",["234","235","236","237","238"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrder } from \"../redux/actions/orderActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./OrderScreen.css\";\n\nconst OrderScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector((state) => state.user);\n  const Orders = useSelector((state) => state.orders);\n  const { orderLoaded, orders } = Orders;\n\n  const { loginSuccess, userDetails } = user;\n\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const orderDetail = (id) => {\n    navigate(`/order/${id}`);\n  }\n\n  const splitDate = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n  };\n\n  \n  return (\n    <div className=\"orderscreen\">\n      <div className=\"Order-tittle\">\n        <h2>Mis Ordenes</h2>\n      </div>\n      <div>\n        {orderLoaded\n          ? orders.length > 0\n            ? orders.map((order, index) => (\n                <div className=\"order-card\" key={index}>\n                  <div>\n                    <h3>#{fiveDigit(order.orderNumber)}</h3>\n                  </div>\n                  <div>\n                    <h3>status: {order.finalStatus}</h3>\n                  </div>\n                  <div>\n                    <h3>{order.total.toFixed(2)}</h3>\n                  </div>\n                  <div>\n                    <h3>{splitDate(order.createdAt)}</h3>\n                  </div>\n                  <div>\n                    <button\n                     onClick={() => orderDetail(order._id)}\n                    >\n                      <h3>ver detalles</h3>\n                    </button>{\" \"}\n                  </div>\n                </div>\n              ))\n            : \"no tienes ordenes\"\n          : \"cargando ordenes\"}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/orderReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/Orders/OrdersDetail.js",["239","240"],"import { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport \"./OrderDetail.css\";\n\nconst OrderDetails = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const Orders = useSelector((state) => state.orders);\n  const { orderLoaded, orders } = Orders;\n  const [selectedorder, setSelectedOrder] = useState({\n    orderNumber: \"\",\n    finalStatus: \"\",\n    total: \"\",\n    _id: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (orderLoaded && loading) {\n      const order = orders.find((p) => p._id === id);\n      setSelectedOrder(order);\n      setLoading(false);\n    }\n  }, [id, orders, orderLoaded, selectedorder]);\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const dateSplit = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n    }\n\n  return (\n    <div className=\"orders-detail\">\n      <div className=\"order-detail-tittle\">\n        {\" \"}\n        <h2>Order Details</h2>\n      </div>\n      <div>\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div className=\"order-detail-format\">\n\n            <div className=\"order-detail-top\">\n              <div>\n                <h2># {fiveDigit(selectedorder.orderNumber)}</h2>\n              </div>\n\n              <div>\n                <h3>status: {selectedorder.finalStatus}</h3>\n              </div>\n\n              <div>\n              <h3>{dateSplit(selectedorder.createdAt)}</h3>\n              </div>\n\n            </div>\n\n            <div className=\"order-detail-body\">\n                <div>\n                    <h3>${(selectedorder.total).toFixed(2)}</h3>\n                </div>\n\n                {selectedorder.payed?\n                <>                    \n                    <div>\n                        <h2>\n                            token: {selectedorder.token}\n                        </h2>\n                    </div>\n                    <div>\n                        <h2>\n                            {selectedorder.txHash}\n                        </h2>\n                    </div>\n                    </>\n                    :\n\n                    <div className=\"order-detail-select\">\n                        <select>\n                            <option value=\"\">token</option>\n                            <option value=\"token-1\">token1</option>\n                            <option value=\"token-2\">token2</option>\n                        </select>\n                        <button>Pagar Orden</button>\n                    </div> \n                }\n            </div>\n            <div >\n                <div>\n                    <h2>Productos:</h2>\n                    {selectedorder.products.map((item, index) => (\n                        <div className=\"order-detail-footer\" key={index}>\n                            <h3>{item.name}</h3>\n                            <h3>Qty:{item.count}</h3>\n                            <h3>Price:{item.price.toFixed(2)}</h3>\n                        </div>\n                        ))}\n                </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminOrdersDetail.js",["241"],"import { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport \"./AdminOrdersDetail.css\";\nimport { confirmOrCancelOrder } from \"../../redux/actions/orderActions\";\n\nconst AdminOrdersDetail = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const adminOrders = useSelector(state => state.adminOrders);\n\n\n  const [selectedorder, setSelectedOrder] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [lodedOrders, setLoadedOrders] = useState(false);\n  \n\n  useEffect(() => {\n    setLoadedOrders(adminOrders.orderLoaded);\n  }, [adminOrders.orderLoaded]);\n\n  useEffect(() => {\n    if (loading) {\n  \n        if(lodedOrders){\n      const order = adminOrders?.orders?.find((p) => p._id === id);\n      setSelectedOrder(order);\n      setLoadedOrders(false);\n      setLoading(false);\n        }\n \n    }\n  }, [lodedOrders, adminOrders.orders]);\n\n  const fiveDigit = (num) => {\n    return num.toString().padStart(5, \"0\");\n  };\n\n  const dateSplit = (date) => {\n    const dateArr = date.split(\"T\");\n    const dateArr2 = dateArr[0].split(\"-\");\n    return `${dateArr2[1]}/${dateArr2[2]}/${dateArr2[0]}`;\n  };\n\n  const confirmOrCancelOrders = (orderId, finalStatus)=>{\n    dispatch(confirmOrCancelOrder(orderId, finalStatus));\n    setLoadedOrders(false)\n    setLoading(true);\n    \n  }\n\n\n  return (\n    <div className=\"orders-detail\">\n      <div className=\"order-detail-tittle\">\n        {\" \"}\n        <h2>Order Details</h2>\n      </div>\n      <div>\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div className=\"order-detail-format\">\n            <div className=\"order-detail-top\">\n              <div>\n                <h2># {fiveDigit(selectedorder.orderNumber)}</h2>\n              </div>\n\n              <div>\n                <h3>status: {selectedorder.finalStatus}</h3>\n              </div>\n\n              <div>\n                <h3>{dateSplit(selectedorder.createdAt)}</h3>\n              </div>\n            </div>\n\n           \n            <div>\n              <div>\n                <h2>Productos:</h2>\n                {selectedorder.products.map((item, index) => (\n                  <div className=\"orders-detail-footer\" key={index}>\n                    <h3>{item.name}</h3>\n                    <h3>Qty:{item.count}</h3>\n                    <h3>Price:{item.price.toFixed(2)}</h3>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"order-detail-body\">\n              <div>\n                <h3>TOTAL: ${selectedorder.total.toFixed(2)}</h3>\n              </div>\n            </div>\n            <div className=\"order-detail-body\">\n              {selectedorder.payed ? (\n                <>\n                  <div>\n                    <h2>token: {selectedorder.token}</h2>\n                  </div>\n                  <div>\n                    <h2>{selectedorder.txHash}</h2>\n                  </div>\n                </>\n              ) : (\n                <div className=\"orders-detail-select\">\n                {selectedorder.finalStatus==='pending' ? \n                <>\n                <button \n                className=\"confirm-order\"\n                onClick={()=>confirmOrCancelOrders(selectedorder._id, 'confirmed')}\n                >\n                    Confirmar Orden</button>\n                 <button \n                 className=\"cancel-order\"\n                onClick={()=>confirmOrCancelOrders(selectedorder._id, 'cancelled')}\n                 > \n                 Cancelar Orden</button>\n                </>\n                :\n                selectedorder.finalStatus==='confirmed' ?\n                <div className=\"confirmed-order-details\">Orden Confirmada</div>:\n                <div className=\"cancelled-order-details\">Orden Cancelada</div>\n                }\n                  \n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminOrdersDetail;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/categoryReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/categoryAction.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/adminSite/AdminEdithProducts.js",["242"],"import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { editProducts } from \"../../redux/actions/productActions\";\nimport \"./AdminEdithProducts.css\";\n\n\nconst AdminEdithProducts = () => {\n    const dispatch = useDispatch();\n    const Products = useSelector(state => state.product);\n    const category = useSelector(state => state.category);\n    const { initialLoad, products } = Products;\n    const [productFind, setProductFind] = useState(false);\n    const {categories, categoriesLoaded} = category;\n    const [product, setProduct] = useState({});\n\n   \n\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (!productFind) {\n            if(!initialLoad){\n          const Product = products.find((p) => p._id === id);\n          setProduct({...Product, newImg:\"\"});\n          setProductFind(true);\n        }}}, [initialLoad]);\n\n    const handleChange = (e) => {\n      e.preventDefault();\n \n        dispatch(editProducts(product, id));\n    }\n\n    const convertImageToBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n      });\n    }\n\n\n\n \n  return (\n    <div className=\"admin-edith-products\">\n     <div className=\"title-adminsite\">\n         <h2>Editar Producto</h2>\n     </div>\n    {!productFind?\n    <div className=\"loading-products\">\n        <h2>Cargando...</h2>\n    </div>\n    :\n      <form className=\"edit-product-form\"\n      onSubmit={(e) => {handleChange(e)}}\n      >\n        <div className=\"edit-top-products-detail\">\n          <div className=\"inputs-flex-colum\">\n            <p>Nombre: </p>\n            <input\n              type=\"text\"\n              value={product.name}\n                onChange={(e) =>\n                    setProduct({ ...product, name: e.target.value })}\n            />\n          </div>\n          <div className=\"inputs-flex-colum\">\n            <p>Precio: </p>\n            <input\n              type=\"number\"\n                value={product.price}\n                onChange={(e) =>\n                    setProduct({ ...product, price: e.target.value })}\n            />\n          </div>\n          <div className=\"inputs-flex-colum\">\n            <p>stock: </p>\n            <input\n              type=\"number\"\n            value={product.countInStock}\n                onChange={(e) =>\n                    setProduct({ ...product, countInStock: e.target.value })}  \n            />\n          </div>\n\n        </div>\n        <div>\n        <div className=\"edit-category-admin-product\">\n            <p>Categoria: </p>\n            <select\n            value={product.categorieId._id}\n            onChange={(e) =>\n                setProduct({ ...product, categorieId: e.target.value })}\n            >\n              <option value={product.categorieId._id}>{product.categorieId.name}</option>\n                {categoriesLoaded &&\n                    categories.map((category) => (\n                        <option key={category._id} value={category._id}>\n                            {category.name}\n                        </option>\n                    ))}\n               \n            </select>\n          </div>\n        </div>\n        <div className=\"admin-edit-description\">\n        <p>Descripcion: </p>\n          <textarea\n           value={product.description}\n              onChange={(e) =>\n                    setProduct({ ...product, description: e.target.value })}\n          />\n        </div>\n        <div className=\"edit-body-products-detail\">\n\n          <div className=\"edit-image-select-product\">\n            <p>Imagen:</p>\n            {product.newImg !== \"\"?\n            <img src={product.newImg} alt=\"product\"/>\n            :\n            <img src={product.imageUrl.url} alt=\"product\" />\n\n            }\n                      </div>\n          <div>\n            <input\n                type=\"file\"\n                onChange={(e) =>\n                    convertImageToBase64(e.target.files[0]).then((base64) =>\n                    setProduct({ ...product, newImg: base64 }))}\n            />\n         \n          </div>\n        </div>\n\n        <div className=\"edit-submits-inputs\">\n          <input\n            type=\"submit\"\n           className=\"edit-submit-save\"\n            value=\"Guardar\"\n          />\n        </div>\n      </form>\n    }\n    </div>\n  );\n};\n\nexport default AdminEdithProducts;\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/DropdownCategory.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/screens/CategoryScreen.js",["243","244"],"import './HomeScreen.css';\nimport {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n// Components\nimport Product from '../components/Product';\n\n\nconst CategoryScreen = () => {\n  const {id} = useParams();\n  const category = useSelector(state => state.category)\n  const getProducts = useSelector(state => state.product);\n  const user = useSelector(state => state.user);\n\n  const {products, loading, error, initialLoad} = getProducts;\n  const {categoriesLoaded, categories} = category;\n  const [categoryOnProductLoaded, setCategoryOnProductLoaded] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedCategoryProducts, setSelectedCategoryProducts] = useState({});\n\n  useEffect(() => {\n    if (!categoryOnProductLoaded && categoriesLoaded && !initialLoad){\n      const category = categories.find(category => category._id === id);\n      setSelectedCategory(category);\n      setSelectedCategoryProducts(products.filter(product => product.categorieId._id === id));\n      setCategoryOnProductLoaded(true);\n    }\n  }, [categoryOnProductLoaded, categoriesLoaded, categories, id, products, initialLoad]);\n\n  //if id change reload products\n  useEffect(() => {\n    if(categoryOnProductLoaded){\n    if (id !== selectedCategory._id){\n      setSelectedCategoryProducts(products.filter(product => product.categorieId._id === id));\n      setSelectedCategory(categories.find(category => category._id === id));\n    }}\n  }, [id, products, categories, selectedCategory, categoryOnProductLoaded]);\n\n\n  \n\n  return (\n    <div className=\"homescreen\">\n     \n      {categoryOnProductLoaded? \n      <h2>{selectedCategory.name}</h2>: <h2>Loading...</h2>}\n\n      <div className=\"homescreen__products\">\n        {!categoryOnProductLoaded ? (\n          <h2>Loading...</h2>\n        ) : error ? (\n          <h2>{error}</h2>\n        ) : (\n          selectedCategoryProducts.map(product => (\n            <Product\n              key={product._id}\n              name={product.name}\n              description={product.description}\n              price={product.price}\n              imageUrl={product.imageUrl.url}\n              productId={product._id}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default CategoryScreen\n","/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/sideDrower/AcordionDrawer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/components/sideDrower/AcordionDrawerOrders.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/reducers/adminOrdersReducer.js",[],"/home/kcastoverde/workspace/e-commerce-store/e-comerce-frontend/src/redux/actions/adminOrdersAction.js",["245"],"import {Api} from '../../utils/Api';\n\nconst requesAdminOrders = () => ({\n    type: \"REQUEST_ADMIN_ORDER\",\n});\n\nconst receiveAdminOrders = payload => ({\n    type: \"RECEIVE_ADMIN_ORDER\",\n    payload: payload,\n});\n\nconst errorAdminOrders = payload => ({\n    type: \"ERROR_ADMIN_ORDER\",\n    payload: payload,\n});\n\nconst updateAdminOrders = payload => ({\n    type: \"UPDATE_ADMIN_ORDER\",\n    payload: payload,\n});\n\nexport const fetchAdminOrders = () => async dispatch => {\n    dispatch(requesAdminOrders());\n    try {\n        const data = await Api.getAdminOrders();\n        dispatch(receiveAdminOrders(data));\n    }\n    catch (error) {\n        dispatch(errorAdminOrders(error));\n    }\n}",{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":35,"column":10,"nodeType":"252","messageId":"253","endLine":35,"endColumn":22},{"ruleId":"250","severity":1,"message":"254","line":35,"column":24,"nodeType":"252","messageId":"253","endLine":35,"endColumn":35},{"ruleId":"250","severity":1,"message":"255","line":22,"column":21,"nodeType":"252","messageId":"253","endLine":22,"endColumn":29},{"ruleId":"250","severity":1,"message":"256","line":13,"column":9,"nodeType":"252","messageId":"253","endLine":13,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":33,"column":5,"nodeType":"259","endLine":33,"endColumn":32,"suggestions":"260"},{"ruleId":"250","severity":1,"message":"261","line":7,"column":20,"nodeType":"252","messageId":"253","endLine":7,"endColumn":34},{"ruleId":"257","severity":1,"message":"262","line":27,"column":6,"nodeType":"259","endLine":27,"endColumn":16,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"264","line":2,"column":9,"nodeType":"252","messageId":"253","endLine":2,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":18,"column":10,"nodeType":"252","messageId":"253","endLine":18,"endColumn":22},{"ruleId":"250","severity":1,"message":"265","line":1,"column":16,"nodeType":"252","messageId":"253","endLine":1,"endColumn":27},{"ruleId":"250","severity":1,"message":"254","line":15,"column":10,"nodeType":"252","messageId":"253","endLine":15,"endColumn":21},{"ruleId":"250","severity":1,"message":"265","line":1,"column":16,"nodeType":"252","messageId":"253","endLine":1,"endColumn":27},{"ruleId":"250","severity":1,"message":"266","line":2,"column":9,"nodeType":"252","messageId":"253","endLine":2,"endColumn":17},{"ruleId":"250","severity":1,"message":"265","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":21},{"ruleId":"250","severity":1,"message":"267","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":19},{"ruleId":"250","severity":1,"message":"268","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"269","line":23,"column":10,"nodeType":"252","messageId":"253","endLine":23,"endColumn":15},{"ruleId":"250","severity":1,"message":"270","line":24,"column":9,"nodeType":"252","messageId":"253","endLine":24,"endColumn":16},{"ruleId":"250","severity":1,"message":"271","line":17,"column":7,"nodeType":"252","messageId":"253","endLine":17,"endColumn":18},{"ruleId":"250","severity":1,"message":"272","line":22,"column":7,"nodeType":"252","messageId":"253","endLine":22,"endColumn":18},{"ruleId":"250","severity":1,"message":"273","line":14,"column":10,"nodeType":"252","messageId":"253","endLine":14,"endColumn":16},{"ruleId":"250","severity":1,"message":"274","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":18},{"ruleId":"250","severity":1,"message":"264","line":3,"column":20,"nodeType":"252","messageId":"253","endLine":3,"endColumn":29},{"ruleId":"250","severity":1,"message":"264","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":19},{"ruleId":"250","severity":1,"message":"275","line":11,"column":32,"nodeType":"252","messageId":"253","endLine":11,"endColumn":43},{"ruleId":"250","severity":1,"message":"276","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":25},{"ruleId":"250","severity":1,"message":"264","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":19},{"ruleId":"250","severity":1,"message":"264","line":4,"column":20,"nodeType":"252","messageId":"253","endLine":4,"endColumn":29},{"ruleId":"250","severity":1,"message":"264","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"277","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":20},{"ruleId":"250","severity":1,"message":"278","line":8,"column":9,"nodeType":"252","messageId":"253","endLine":8,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":14,"column":11,"nodeType":"252","messageId":"253","endLine":14,"endColumn":23},{"ruleId":"250","severity":1,"message":"254","line":14,"column":25,"nodeType":"252","messageId":"253","endLine":14,"endColumn":36},{"ruleId":"250","severity":1,"message":"278","line":8,"column":9,"nodeType":"252","messageId":"253","endLine":8,"endColumn":17},{"ruleId":"257","severity":1,"message":"279","line":25,"column":6,"nodeType":"259","endLine":25,"endColumn":46,"suggestions":"280"},{"ruleId":"257","severity":1,"message":"281","line":33,"column":6,"nodeType":"259","endLine":33,"endColumn":39,"suggestions":"282"},{"ruleId":"257","severity":1,"message":"283","line":27,"column":14,"nodeType":"259","endLine":27,"endColumn":27,"suggestions":"284"},{"ruleId":"250","severity":1,"message":"256","line":14,"column":9,"nodeType":"252","messageId":"253","endLine":14,"endColumn":13},{"ruleId":"250","severity":1,"message":"285","line":16,"column":20,"nodeType":"252","messageId":"253","endLine":16,"endColumn":27},{"ruleId":"250","severity":1,"message":"286","line":17,"column":7,"nodeType":"252","messageId":"253","endLine":17,"endColumn":24},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'loginSuccess' is assigned a value but never used.","Identifier","unusedVar","'userDetails' is assigned a value but never used.","'discount' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["289"],"'removeFromCart' is defined but never used.","React Hook useEffect has a missing dependency: 'initialLoad'. Either include it or remove the dependency array.",["290"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'cartData' is assigned a value but never used.","'clearCart' is defined but never used.","'addOrder' is defined but never used.","'token' is assigned a value but never used.","'history' is assigned a value but never used.","'updateOrder' is assigned a value but never used.","'deleteOrder' is assigned a value but never used.","'orders' is assigned a value but never used.","'useState' is defined but never used.","'StoreLoaded' is assigned a value but never used.","'MdDeleteForever' is defined but never used.","'fetchOrder' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has missing dependencies: 'id' and 'loading'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'id', 'productFind', and 'products'. Either include them or remove the dependency array.",["293"],"'loading' is assigned a value but never used.","'updateAdminOrders' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [filter, filterSearch, initialLoad]",{"range":"304","text":"305"},"Update the dependencies array to be: [dispatch, initialLoad]",{"range":"306","text":"307"},"Update the dependencies array to be: [id, orders, orderLoaded, selectedorder, loading]",{"range":"308","text":"309"},"Update the dependencies array to be: [lodedOrders, adminOrders?.orders, loading, id]",{"range":"310","text":"311"},"Update the dependencies array to be: [id, initialLoad, productFind, products]",{"range":"312","text":"313"},[894,921],"[filter, filterSearch, initialLoad]",[858,868],"[dispatch, initialLoad]",[721,761],"[id, orders, orderLoaded, selectedorder, loading]",[930,963],"[lodedOrders, adminOrders?.orders, loading, id]",[920,933],"[id, initialLoad, productFind, products]"]